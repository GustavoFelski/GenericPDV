<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel7.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAB2jRsAc4sTAHSMFABzjBQAdIsTAHSLFwB1jBsAjaYbAJiyHwCXsB8Al7EfAJavHgB5kRkAla4eAKS+
        JACivCMAo70jAKC7IgB7kxkAlK0eAKC6IgChuyIAn7khAIqjGwB8lRcAfpYXAH2WFwCBmhgAnLYhAICZ
        GABthREAb4cSAG6GEgBzjBMAmrQgAHGJEwBwiBMAdY4UAHGJEgBthg0AaoMIAGqDBwBthQwAboYNAGyF
        CgCEmTMApbRpALfDiAC9yJIAt8SIAKe1bACKnj0AcooUAHuRIwDGz6AA9vjwAP///wDx8+gAgZcuAG2G
        DAB+lCkA4+jQAPL06gDr798A8fPnAP7+/gD8/foAcIgQANTbtwDs798AorFkAH2TJwB3jh0AfJImAJGk
        SACzv4EAf5UqAG+HDwBrhAkAnKxaAPP17ACLnj4AZ4ECAG6GDgBqhAgAcIgRAGyFCwDGz58AwMuYAGiC
        BABxiRQAcokUAHGIEwDa4MIAobBiAGiCBQB0ixgAx9GiAN3jxwDb4cQA3uPIALPAggByihUA3+TJAJus
        WgB1jBoA8PLlAM7WrQBwiRIAb4gQANXdugCsu3YAaIEDAHOLFgCxvn0AvsiSANPbtgDK06cAvMePANzi
        xABrhAgAYnwAAJeoUgCNoEIA+vv2AMHLmAB5kCEAbIUMAGaAAgCerl4AuMSJAOnt2wDK06gA6OzZAM3V
        rABwiBIAtcKFAPb48QD+//4AusaNAIebOACzwIEA0NiyANzixQDR2bMAucWLAJOmTABpgwYAa4QKAIih
        GgB5khUAe5MWAHqSFgB+lxcAm7UhAKO+JAChvCIAor0iAKC6IQBzihcAjKYYAJiyHACWsRwAl7EcAJWw
        GwB4kBUAhZk0AIKYLACDmS0Ag5gwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApqeoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKmfoKGioqKioqKioqKioqKioqKioqKi
        oqKioqKioqOkpQYNmxUPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw+cnZ4SBhMPFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQVFhIGEw8VlZaXl5eXl5eXl5eXl5eXl5eXl5eXl5iZmg8WEgYTDxUdHh8fHx8fHx8f
        Hx8fHx8fHx8fHx8fICEiDxYSBhMPFRsfIyMjIyMjIyMjIyMjIyMjIyMjIyMkJSIPFhIGEw8VGx8jIyMj
        IyMjIyMjIyMjIyMjIyMjIyQlIg8WEgYTDxUbHyMjIyMjIyMjIyZVVSYjIyMjIyMjJCUiDxYSBhMPFRsf
        IyMjIyMjJjuTLFVDLJOUVSMjIyMkJSIPFhIGEw8VGx8jIyMjI20sjI2Oj2OQkZJghyMjIyQlIg8WEgYT
        DxUbHyMjIyNth4iJODg4ODg4iosqbCMjJCUiDxYSBhMPFRsfIyMjJiqCODg4g2uEhTg4hipsIyMkJSIP
        FhIGEw8VGx8jIyNWe3w4OH1+f4CBODh1KmwjIyQlIg8WEgYTDxUbHyMjI052ODh3VVZ4eXo4OHUqbCMj
        JCUiDxYSBhMPFRsfIyNVbW44OG9wcXJzdDg4dSpsIyMkJSIPFhIGEw8VGx8jI1VmZzg4aF9pajg4ODhr
        KmwjIyQlIg8WEgYTDxUbHyMjVVxdODheX2BhYmNjZGVTJiMjJCUiDxYSBhMPFRsfIyMmVlc4OFhZJlo0
        W1s0IyMjIyMkJSIPFhIGEw8VGx8jIyNOTzg4UFFSO1M7VChVIyMjIyQlIg8WEgYTDxUbHyMjI0MjRDg4
        RUZHSElKS0xNIyMjJCUiDxYSBhMPFRsfIyMjIzs8PTg4OD4/QEFCLScjIyMkJSIPFhIGEw8VGx8jIyMj
        Iyw1Njc4ODg4ODk6KyMjIyQlIg8WEgYTDxUbHyMjIyMjIyssLS4vMDEyMzQmIyMjJCUiDxYSBhMPFRsf
        IyMjIyMjIyYnKCkpKSkqIyMjIyMkJSIPFhIGEw8VGx8jIyMjIyMjIyMjIyMjIyMjIyMjIyQlIg8WEgYT
        DxUdHh8fHx8fHx8fHx8fHx8fHx8fHx8fICEiDxYSBhMPFRcYGRkZGRkZGRkZGRkZGRkZGRkZGRkaGxwP
        FhIGEw8UFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFBUWEgYNDg8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PEBESBgcICQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCwwAAQIDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMEBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>