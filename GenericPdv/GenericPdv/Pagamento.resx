<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ColId.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAB2jRsAc4sTAHSMFABzjBQAdIsTAHSLFwB1jBsAjaYbAJiyHwCXsB8Al7EfAJavHgB5kRkAla4eAKS+
        JACivCMAo70jAKC7IgB7kxkAlK0eAKC6IgChuyIAn7khAIqjGwB8lRcAfpYXAH2WFwCBmhgAnLYhAICZ
        GABthREAb4cSAG6GEgBzjBMAmrQgAHGJEwBwiBMAdY4UAHGJEgBthg0AaoMIAGqDBwBthQwAboYNAGyF
        CgCEmTMApbRpALfDiAC9yJIAt8SIAKe1bACKnj0AcooUAHuRIwDGz6AA9vjwAP///wDx8+gAgZcuAG2G
        DAB+lCkA4+jQAPL06gDr798A8fPnAP7+/gD8/foAcIgQANTbtwDs798AorFkAH2TJwB3jh0AfJImAJGk
        SACzv4EAf5UqAG+HDwBrhAkAnKxaAPP17ACLnj4AZ4ECAG6GDgBqhAgAcIgRAGyFCwDGz58AwMuYAGiC
        BABxiRQAcokUAHGIEwDa4MIAobBiAGiCBQB0ixgAx9GiAN3jxwDb4cQA3uPIALPAggByihUA3+TJAJus
        WgB1jBoA8PLlAM7WrQBwiRIAb4gQANXdugCsu3YAaIEDAHOLFgCxvn0AvsiSANPbtgDK06cAvMePANzi
        xABrhAgAYnwAAJeoUgCNoEIA+vv2AMHLmAB5kCEAbIUMAGaAAgCerl4AuMSJAOnt2wDK06gA6OzZAM3V
        rABwiBIAtcKFAPb48QD+//4AusaNAIebOACzwIEA0NiyANzixQDR2bMAucWLAJOmTABpgwYAa4QKAIih
        GgB5khUAe5MWAHqSFgB+lxcAm7UhAKO+JAChvCIAor0iAKC6IQBzihcAjKYYAJiyHACWsRwAl7EcAJWw
        GwB4kBUAhZk0AIKYLACDmS0Ag5gwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApqeoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKmfoKGioqKioqKioqKioqKioqKioqKi
        oqKioqKioqOkpQYNmxUPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw+cnZ4SBhMPFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQVFhIGEw8VlZaXl5eXl5eXl5eXl5eXl5eXl5eXl5iZmg8WEgYTDxUdHh8fHx8fHx8f
        Hx8fHx8fHx8fHx8fICEiDxYSBhMPFRsfIyMjIyMjIyMjIyMjIyMjIyMjIyMkJSIPFhIGEw8VGx8jIyMj
        IyMjIyMjIyMjIyMjIyMjIyQlIg8WEgYTDxUbHyMjIyMjIyMjIyZVVSYjIyMjIyMjJCUiDxYSBhMPFRsf
        IyMjIyMjJjuTLFVDLJOUVSMjIyMkJSIPFhIGEw8VGx8jIyMjI20sjI2Oj2OQkZJghyMjIyQlIg8WEgYT
        DxUbHyMjIyNth4iJODg4ODg4iosqbCMjJCUiDxYSBhMPFRsfIyMjJiqCODg4g2uEhTg4hipsIyMkJSIP
        FhIGEw8VGx8jIyNWe3w4OH1+f4CBODh1KmwjIyQlIg8WEgYTDxUbHyMjI052ODh3VVZ4eXo4OHUqbCMj
        JCUiDxYSBhMPFRsfIyNVbW44OG9wcXJzdDg4dSpsIyMkJSIPFhIGEw8VGx8jI1VmZzg4aF9pajg4ODhr
        KmwjIyQlIg8WEgYTDxUbHyMjVVxdODheX2BhYmNjZGVTJiMjJCUiDxYSBhMPFRsfIyMmVlc4OFhZJlo0
        W1s0IyMjIyMkJSIPFhIGEw8VGx8jIyNOTzg4UFFSO1M7VChVIyMjIyQlIg8WEgYTDxUbHyMjI0MjRDg4
        RUZHSElKS0xNIyMjJCUiDxYSBhMPFRsfIyMjIzs8PTg4OD4/QEFCLScjIyMkJSIPFhIGEw8VGx8jIyMj
        Iyw1Njc4ODg4ODk6KyMjIyQlIg8WEgYTDxUbHyMjIyMjIyssLS4vMDEyMzQmIyMjJCUiDxYSBhMPFRsf
        IyMjIyMjIyYnKCkpKSkqIyMjIyMkJSIPFhIGEw8VGx8jIyMjIyMjIyMjIyMjIyMjIyMjIyQlIg8WEgYT
        DxUdHh8fHx8fHx8fHx8fHx8fHx8fHx8fICEiDxYSBhMPFRcYGRkZGRkZGRkZGRkZGRkZGRkZGRkaGxwP
        FhIGEw8UFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFBUWEgYNDg8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PEBESBgcICQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCwwAAQIDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMEBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>